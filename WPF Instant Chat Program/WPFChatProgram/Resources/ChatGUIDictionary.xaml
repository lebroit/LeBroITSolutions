<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:IndicatorLightWPF="clr-namespace:LeBroITSolutions.IndicatorLightWPF;assembly=IndicatorLightWPF">

    <!--Glassbutton Resources-->
    <ControlTemplate x:Key="GlassButtonBlue" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border BorderThickness="1,1,1,1" BorderBrush="#FFEEF1F2" CornerRadius="10,10,10,10">
            <Border Background="#7F1A29CC" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" x:Name="border">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.509*"/>
                        <RowDefinition Height="0.491*"/>
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="2" CornerRadius="10,10,10,10" x:Name="Glow" Opacity="0">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.598" ScaleY="2.053"/>
                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                        <RotateTransform Angle="0.044" CenterX="0.5" CenterY="0.5"/>
                                        <TranslateTransform X="-0.026" Y="0.515"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#B28FBAF9" Offset="0"/>
                                <GradientStop Color="#00A0C5F9" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentPresenter HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Grid.RowSpan="2"/>
                    <Border Margin="0,0,0,0" CornerRadius="10,10,0,0" x:Name="Shine">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#99F4EEEE" Offset="0"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
                <Setter Property="Visibility" TargetName="Glow" Value="Hidden"/>
                <Setter Property="Opacity" TargetName="Shine" Value="0.4"/>
                <Setter Property="Background" TargetName="border" Value="#CC07133D"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                </Trigger.ExitActions>
            </Trigger>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Show Chat Window Animation -->
    <Storyboard x:Key="showChatWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chat" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chat" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Close Chat Window Animation -->
    <Storyboard x:Key="hideChatWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chat" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chat" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Show WhosOnline Window Animation -->
    <Storyboard x:Key="showWhosOnlineWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WhosOnline" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WhosOnline" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Close WhosOnline Window Animation -->
    <Storyboard x:Key="hideWhosOnlineWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WhosOnline" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="WhosOnline" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Show WhosOnline Window Animation -->
    <Storyboard x:Key="showConfigurationWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ConfigurationSettings" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ConfigurationSettings" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Close WhosOnline Window Animation -->
    <Storyboard x:Key="hideConfigurationWindow">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ConfigurationSettings" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ConfigurationSettings" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:001" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--Brushes Used as stylesheet-->
    <LinearGradientBrush x:Key="FormTitleYellow" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#F2DB02" Offset="0.0"/>
                <GradientStop Color="#FEFBD2" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#DFF" Offset="0.0"/>
                <GradientStop Color="#3D5BD1" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
   
    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#DFF" Offset="0.0"/>
                <GradientStop Color="#AAB3CC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#87A2F7" Offset="0.0"/>
                <GradientStop Color="#ECEEFF" Offset="0.1"/>
                <GradientStop Color="#ECEEFF" Offset="0.9"/>
                <GradientStop Color="#DFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#ECEEFF" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#3D5BD1" Offset="0.0"/>
                <GradientStop Color="#2C2F63" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>  

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAB3CC" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#2C2F63" />   

    <!-- ChatComboboxStyle-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border" 
                Grid.ColumnSpan="2"
                CornerRadius="10,10,10,10"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1" />
            <Border 
                Grid.Column="0"
                CornerRadius="10,10,10,10" 
                Margin="1" 
                Background="{StaticResource WindowBackgroundBrush}" 
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="0,0,1,0" />
            <Path 
                x:Name="Arrow"
                Grid.Column="1"     
                Fill="{StaticResource GlyphBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="OvalBorderTemplate" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" BorderThickness="2" Focusable="False" Background="{TemplateBinding Background}" CornerRadius="10,10,10,10" />
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid>
            <Rectangle Stroke="#FFe1e1e1" RadiusX="10" RadiusY="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="Rectangle">
                <Rectangle.BitmapEffect>
                    <DropShadowBitmapEffect ShadowDepth="2" Color="#FF0E0AAE"/>
                </Rectangle.BitmapEffect>
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#DFF9F9F9" Offset="0"/>
                        <GradientStop Color="#DDE4FF" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <ToggleButton 
                Name="ToggleButton" 
                Template="{StaticResource ComboBoxToggleButton}" 
                Grid.Column="2" 
                Focusable="false"
                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                ClickMode="Press" Background="#FFD7E7F3">
            </ToggleButton>

            <TextBox x:Name="PART_EditableTextBox"
                Style="{x:Null}" 
                Template="{StaticResource OvalBorderTemplate}" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center" 
                Margin="3,3,23,3"
                Focusable="True"
                Foreground="{TemplateBinding Foreground}"
                Background="Transparent"
                Visibility="Hidden"
                IsReadOnly="{TemplateBinding IsReadOnly}"/>

            <ContentPresenter
                Name="ContentSite"
                IsHitTestVisible="False" 
                Content="{TemplateBinding SelectionBoxItem}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                Margin="3,3,23,3"
                VerticalAlignment="Center"
                HorizontalAlignment="Center" />
            <Popup 
            	x:Name="Popup"
            	Placement="Bottom"
            	IsOpen="{TemplateBinding IsDropDownOpen}"
            	AllowsTransparency="True" 
            	Focusable="False"
            	PopupAnimation="Slide">

                <Grid 
            		x:Name="DropDown"
            		SnapsToDevicePixels="True"                
            		MinWidth="{TemplateBinding ActualWidth}"
            		MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
            			x:Name="DropDownBorder"
            			Background="#ECF5FE"
            			BorderThickness="1"
            			BorderBrush="#FF0E0AAE" CornerRadius="0,0,15,15"/>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Center"/>
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"
               Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBoxStyle-->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="#FF0C0981"/>
        <Setter Property="Width" Value="165"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- ChatTextBoxStyle-->
    <Style x:Key="ChatTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Rectangle Stroke="#FFe1e1e1" RadiusX="10" RadiusY="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="Rectangle">
                            <Rectangle.BitmapEffect>
                                <DropShadowBitmapEffect ShadowDepth="1" Color="#FF0E0AAE"/>
                            </Rectangle.BitmapEffect>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#DFF9F9F9" Offset="0"/>
                                    <GradientStop Color="#FF0E0AAE" Offset="1.5"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                            <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Checkbox with text on the left side-->
    <Style x:Key="CheckboxLeftSideText" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" 
            Value="{DynamicResource CheckBoxFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" 
            Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <DockPanel 
          HorizontalAlignment="Stretch" 
          VerticalAlignment="Top" 
          Width="Auto" 
          LastChildFill="True">

                        <Microsoft_Windows_Themes:BulletChrome 
            DockPanel.Dock="Right" 
            Margin="4,0,0,0"
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            IsChecked="{TemplateBinding IsChecked}" 
            RenderMouseOver="{TemplateBinding IsMouseOver}" 
            RenderPressed="{TemplateBinding IsPressed}" 
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Center" 
            Width="Auto" 
            Height="Auto"/>

                        <ContentPresenter 
            Content="{TemplateBinding Content}" 
            RecognizesAccessKey="True" 
            Height="Auto" 
            HorizontalAlignment="Left" />

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LabelTitleStyle-->
    <Style x:Key="LabelTitleStyle" TargetType="Label">
        <Setter Property="Height" Value="46" />
        <Setter Property="Width" Value="260" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{StaticResource FormTitleYellow}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <!--UpperRightCorner Image-->
    <Style x:Key="UpperRightCornerImage" TargetType="Image">
        <Setter Property="Height" Value="56.5"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="54"/>
    </Style>

    <!--Remove Host image-->
    <Style x:Key="RemoveHostImage" TargetType="Image">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>

    <!--Button Styles-->
    <!--ButtonAddImage Style-->
    <Style x:Key="ButtonAddImage" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="10,0,0,10" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!--ButtonAddImage Style-->
    <Style x:Key="ButtonEraseText" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="45,0,0,10" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!--LightIndicator Style-->
    <Style x:Key="LightIndicator" TargetType="IndicatorLightWPF:IndicatorLight">
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="76,0,200,10" />
    </Style>

    <!--ChatHostActiveText Style -->
    <Style x:Key="ChatHostActiveTextStyle" TargetType="TextBlock">
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="107,0,109,6" />
    </Style>

    <!--RichTextBox Styles-->
    <!--MessageToSend Style-->
    <Style x:Key="MessageToSend" TargetType="RichTextBox">
        <Setter Property="Height" Value="110"/>
        <Setter Property="Width" Value="304" />
        <Setter Property="Margin" Value="6,0,6,44"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <!--MessageToSendReceive Styly-->
    <Style x:Key="MessageToSendReceive" TargetType="RichTextBox">
        <Setter Property="Height" Value="310"/>
        <Setter Property="Width" Value="304"/>
        <Setter Property="Margin" Value="6,83,6,163"/>
    </Style>
    
     <!--Chat window Borders-->
    <Style x:Key="OuterBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="587" />
        <Setter Property="Width" Value="350" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FF0E0AAE" />
        <Setter Property="Background" Value="#FF3991FA" />
    </Style>
    <Style x:Key="MiddleBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="579" />
        <Setter Property="Width" Value="339" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FF3282E0" />
        <Setter Property="Background" Value="Cyan" />
    </Style>
    <Style x:Key="InnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="570" />
        <Setter Property="Width" Value="330" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FFB6F4FE" />
        <Setter Property="Background" Value="#FFB6F4FE" />
    </Style>
    <Style x:Key="MoreInnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="563" />
        <Setter Property="Width" Value="323" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF0F0982" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="MostInnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="558" />
        <Setter Property="Width" Value="318" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF0F0982" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="HeaderBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="75" />
        <Setter Property="Margin" Value="2,2,1,1" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="#FF0E0AAE" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--Configuration window Borders-->
    <Style x:Key="ConfigOuterBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="422" />
        <Setter Property="Width" Value="405" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FF0E0AAE" />
        <Setter Property="Background" Value="#FF3991FA" />
    </Style>
    <Style x:Key="ConfigMiddleBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="410" />
        <Setter Property="Width" Value="395" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FF3282E0" />
        <Setter Property="Background" Value="Cyan" />
    </Style>
    <Style x:Key="ConfigInnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="401" />
        <Setter Property="Width" Value="386" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="#FFB6F4FE" />
        <Setter Property="Background" Value="#FFB6F4FE" />
    </Style>
    <Style x:Key="ConfigMoreInnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="394" />
        <Setter Property="Width" Value="379" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF0F0982" />
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="ConfigMostInnerBorderStyle" TargetType="Border">
        <Setter Property="Height" Value="389" />
        <Setter Property="Width" Value="374" />
        <Setter Property="CornerRadius" Value="30,30,30,30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF0F0982" />
        <Setter Property="Background" Value="White" />
    </Style>

    <ObjectDataProvider MethodName="GetType"     
                        ObjectType="{x:Type sys:Type}" 
                        x:Key="colorsTypeOdp">
        <ObjectDataProvider.MethodParameters>
            <sys:String>System.Windows.Media.Colors, PresentationCore,             
                Version=3.0.0.0, Culture=neutral,              
                PublicKeyToken=31bf3856ad364e35
            </sys:String>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider ObjectInstance="{StaticResource colorsTypeOdp}"      
                        MethodName="GetProperties" 
                        x:Key="colorPropertiesOdp">        
    </ObjectDataProvider>

</ResourceDictionary>